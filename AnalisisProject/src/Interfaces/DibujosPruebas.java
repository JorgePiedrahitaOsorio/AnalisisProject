/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import Clases.Estrella;
import Clases.Tesoro;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.MouseEvent;
import java.awt.event.*;
import java.util.LinkedList;

/**
 *
 * @author JORGE OSORIO
 */
public class DibujosPruebas extends javax.swing.JPanel implements MouseListener, MouseMotionListener {

    /**
     * Creates new form DibujosPruebas
     */
    Tesoro tesoro;
    Estrella estrella;
    LinkedList<Rectangle> rectangulos;
    Rectangle aux;
    boolean agregar;
    Color color;

    public DibujosPruebas() {
        initComponents();
        this.tesoro = new Tesoro(new Point(50, 50), 50, 50, 50);
        this.estrella = new Estrella(100, 100, 60, 60);
        this.aux = new Rectangle(0, 0, 0, 0);
        this.rectangulos = new LinkedList<>();
        this.agregar = false;
        this.color = Color.GREEN;
        this.addMouseListener(this);
        this.addMouseMotionListener(this);
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);

        g.drawImage(this.tesoro.getImagen().getImage(), this.tesoro.getUbicacion().x, this.tesoro.getUbicacion().y, this.tesoro.getAncho(), this.tesoro.getAlto(), this);
        g.drawImage(this.estrella.getImagen().getImage(), this.estrella.getX(), this.estrella.getY(), this.estrella.getAncho(), this.estrella.getAlto(), this);
        //g.setColor(Color.GREEN);
        this.rectangulos.forEach((r) -> {
            g.drawRect(r.x, r.y, r.width, r.height);
        });
        if (agregar) {
            g.setColor(color);
            g.drawRect(aux.x, aux.y, aux.width, aux.height);
        }

        repaint();
    }

    private boolean NoColisiona(Rectangle aux) {
        return this.rectangulos.stream().noneMatch((r) -> (r.intersects(aux)));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void mouseDragged(MouseEvent me) {
    }

    @Override
    public void mouseMoved(MouseEvent me) {
        if (agregar) {
            aux = new Rectangle(me.getX(), me.getY(), 50, 50);
            if (!NoColisiona(aux)) {
                this.color = Color.RED;
            } else {
                this.color = Color.GREEN;
            }
        }

    }

    @Override
    public void mouseClicked(MouseEvent me) {
        if (agregar) {
            if (NoColisiona(new Rectangle(me.getX(), me.getY(), 50, 50))) {
                this.rectangulos.add(new Rectangle(me.getX(), me.getY(), 50, 50));
                this.agregar = false;
            }
        }

    }

    @Override
    public void mousePressed(MouseEvent me) {
    }

    @Override
    public void mouseReleased(MouseEvent me) {
    }

    @Override
    public void mouseEntered(MouseEvent me) {
    }

    @Override
    public void mouseExited(MouseEvent me) {

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
